{% extends '::frontend.html.twig' %}

{% block content %}

<div class="span9" ng-controller="TeamListCtrl">

	<h1>Haz tu Equipo</h1>

    <input type="text" ng-model="query" ng-change="search()" class="input-large search-query" placeholder="Search">

	<table class="table">
        <thead>
            <tr>
                <th></th>
                <th class="name"><a ng-click="sort_by('name', 'name')">Jugador <i></i></a></th>
                <th class="team"><a ng-click="sort_by('football_team.name', 'team')">Equipo <i></i></a></th>
                <th class="description">Demarcaciones</th>
            </tr>
        </thead>

        <tfoot>
        <td colspan="6">
            <div class="pagination pull-right">
                <ul>
                    <li ng-class="{disabled: currentPage == 0}">
                        <a href ng-click="prevPage()">« Prev</a>
                    </li>
                    <li ng-repeat="n in range(pagedItems.length)"
                        ng-class="{active: n == currentPage}"
                        ng-click="setPage()">
                        <a href ng-bind="n + 1">1</a>
                    </li>
                    <li ng-class="{disabled: currentPage == pagedItems.length - 1}">
                        <a href ng-click="nextPage()">Next »</a>
                    </li>
                </ul>
            </div>
        </td>
        </tfoot>

        <tbody>
            <tr ng-repeat="item in pagedItems[currentPage] | orderBy:sortingOrder:reverse">
                <td>
                    <input type="checkbox" id="[[ player.id ]]" ng-click="tooglePlayer($event, player.id)" />
                </td>
                <td>
                    [[ item.name ]]
                </td>
                <td>
                    [[ item.football_team.name ]]
                </td>
                <td>
                    <span ng-repeat="demarcation in item.demarcations">[[ demarcation.name ]]<span ng-show="!$last">, </span> </span>
                </td>
            </tr>
        </tbody>

	</table>

</div>

{% endblock %}

{% block javascripts %}
{{ parent() }}

{% javascripts filter='?yui_js'
   '@MfManagerBundle/Resources/public/js/angular/lib/angular.min.js'
   '@MfManagerBundle/Resources/public/js/angular/controller/controller.js'
%}
<script src="{{ asset_url }}"></script>
{% endjavascripts %}
<script type="text/javascript">
    manager.controller('TeamListCtrl', function($scope, $http, $filter) {
        $http.get('http://manager.local/app_dev.php/api/players/1.json').success(function(data) {
            $scope.items = data;

            $scope.sortingOrder = 'name';
            $scope.reverse = false;
            $scope.filteredItems = [];
            $scope.groupedItems = [];
            $scope.itemsPerPage = 20;
            $scope.pagedItems = [];
            $scope.currentPage = 0;

            var searchMatch = function (haystack, needle) {
                if (!needle) {
                    return true;
                }
                haystack = String(haystack);
                return haystack.toLowerCase().indexOf(needle.toLowerCase()) !== -1;
            };

            // init the filtered items
            $scope.search = function () {
                $scope.filteredItems = $filter('filter')($scope.items, $scope.query);
                // take care of the sorting order
                if ($scope.sortingOrder !== '') {
                    $scope.filteredItems = $filter('orderBy')($scope.filteredItems, $scope.sortingOrder, $scope.reverse);
                }
                $scope.currentPage = 0;
                // now group by pages
                $scope.groupToPages();
            };

            $scope.groupToPages = function () {
                $scope.pagedItems = [];

                for (var i = 0; i < $scope.filteredItems.length; i++) {
                    if (i % $scope.itemsPerPage === 0) {
                        $scope.pagedItems[Math.floor(i / $scope.itemsPerPage)] = [ $scope.filteredItems[i] ];
                    } else {
                        $scope.pagedItems[Math.floor(i / $scope.itemsPerPage)].push($scope.filteredItems[i]);
                    }
                }
            };

            $scope.range = function (start, end) {
                var ret = [];
                if (!end) {
                    end = start;
                    start = 0;
                }
                for (var i = start; i < end; i++) {
                    ret.push(i);
                }
                return ret;
            };

            $scope.prevPage = function () {
                if ($scope.currentPage > 0) {
                    $scope.currentPage--;
                }
            };

            $scope.nextPage = function () {
                if ($scope.currentPage < $scope.pagedItems.length - 1) {
                    $scope.currentPage++;
                }
            };

            $scope.setPage = function () {
                $scope.currentPage = this.n;
            };

            // functions have been describe process the data for display
            $scope.search();

            // change sorting order
            $scope.sort_by = function(newSortingOrder, identify) {
                if ($scope.sortingOrder == newSortingOrder)
                    $scope.reverse = !$scope.reverse;

                $scope.sortingOrder = newSortingOrder;

                // icon setup
                $('th i').each(function(){
                    // icon reset
                    $(this).removeClass().addClass('icon-sort');
                });
                if ($scope.reverse)
                    $('th.'+identify+' i').removeClass().addClass('icon-chevron-up');
                else
                    $('th.'+identify+' i').removeClass().addClass('icon-chevron-down');
            };
        });

        $scope.tooglePlayer = function($event, player_id){
            console.log(player_id);
            var checkbox = $event.target;
            var action = (checkbox.checked ? 'add' : 'remove');
            console.log(action);
        };
    });
</script>
{% endblock %}
