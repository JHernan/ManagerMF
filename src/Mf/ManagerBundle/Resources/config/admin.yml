services:
    sonata.admin.league:
        class: Mf\ManagerBundle\Admin\Entity\LeagueAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Leagues, label: "League" }
        arguments:
            - ~
            - Mf\ManagerBundle\Entity\League
            - 'SonataAdminBundle:CRUD' 
        calls:
            - [ setTranslationDomain, [MfManagerBundle] ]

    sonata.admin.tactic:
        class: Mf\ManagerBundle\Admin\Entity\TacticAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Tactics, label: "Tactic" }
        arguments:
            - ~
            - Mf\ManagerBundle\Entity\Tactic
            - 'SonataAdminBundle:CRUD' 
        calls:
            - [ setTranslationDomain, [MfManagerBundle] ]

    sonata.admin.demarcation:
        class: Mf\ManagerBundle\Admin\Entity\DemarcationAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Tactics, label: "Demarcation" }
        arguments:
            - ~
            - Mf\ManagerBundle\Entity\Demarcation
            - 'SonataAdminBundle:CRUD' 
        calls:
            - [ setTranslationDomain, [MfManagerBundle] ]

    sonata.admin.season:
        class: Mf\ManagerBundle\Admin\Entity\SeasonAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Leagues, label: "Season" }
        arguments:
            - ~
            - Mf\ManagerBundle\Entity\Season
            - 'SonataAdminBundle:CRUD' 
        calls:
            - [ setTranslationDomain, [MfManagerBundle] ]

    sonata.admin.team:
        class: Mf\ManagerBundle\Admin\Entity\TeamAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Teams, label: "Team" }
        arguments:
            - ~
            - Mf\ManagerBundle\Entity\Team
            - 'SonataAdminBundle:CRUD' 
        calls:
            - [ setTranslationDomain, [MfManagerBundle] ]

    sonata.admin.match_day:
        class: Mf\ManagerBundle\Admin\Entity\MatchDayAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Leagues, label: "Match Day" }
        arguments:
            - ~
            - Mf\ManagerBundle\Entity\MatchDay
            - 'SonataAdminBundle:CRUD'
        calls:
            - [ setTranslationDomain, [MfManagerBundle] ]

    sonata.admin.football_team:
        class: Mf\ManagerBundle\Admin\Entity\FootballTeamAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Players, label: "Football Team" }
        arguments:
            - ~
            - Mf\ManagerBundle\Entity\FootballTeam
            - 'SonataAdminBundle:CRUD'
        calls:
            - [ setTranslationDomain, [MfManagerBundle] ]

    sonata.admin.player:
        class: Mf\ManagerBundle\Admin\Entity\PlayerAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Players, label: "Player" }
        arguments:
            - ~
            - Mf\ManagerBundle\Entity\Player
            - 'SonataAdminBundle:CRUD'
        calls:
            - [ setTranslationDomain, [MfManagerBundle] ]

    sonata.admin.tactic_demarcation:
        class: Mf\ManagerBundle\Admin\Entity\TacticDemarcationAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Tactics, label: "Tactic Demarcation" }
        arguments:
            - ~
            - Mf\ManagerBundle\Entity\TacticDemarcation
            - 'SonataAdminBundle:CRUD'
        calls:
            - [ setTranslationDomain, [MfManagerBundle] ]

    sonata.admin.honour:
        class: Mf\ManagerBundle\Admin\Entity\HonourAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Teams, label: "Honour" }
        arguments:
            - ~
            - Mf\ManagerBundle\Entity\Honour
            - 'SonataAdminBundle:CRUD'
        calls:
            - [ setTranslationDomain, [MfManagerBundle] ]